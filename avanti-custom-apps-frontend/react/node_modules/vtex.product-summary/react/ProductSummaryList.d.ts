import type { ComponentType, PropsWithChildren } from 'react';
import { PreferenceType } from './utils/normalize';
export interface ProductClickParams {
    position: number;
}
interface SpecificationFilter {
    id: string;
    value: string;
}
interface Props {
    /** Category ID of the listed items. For sub-categories, use "/" (e.g. "1/2/3") */
    category?: string;
    /** Specification Filters of the listed items. */
    specificationFilters?: SpecificationFilter[];
    /** Filter by collection. */
    collection?: string;
    /**
     * Ordination type of the items. Possible values: `''`, `OrderByTopSaleDESC`, `OrderByReleaseDateDESC`, `OrderByBestDiscountDESC`, `OrderByPriceDESC`, `OrderByPriceASC`, `OrderByNameASC`, `OrderByNameDESC`
     * @default ""
     */
    orderBy?: '' | 'OrderByTopSaleDESC' | 'OrderByPriceDESC' | 'OrderByPriceASC' | 'OrderByNameASC' | 'OrderByNameDESC' | 'OrderByReleaseDateDESC' | 'OrderByBestDiscountDESC';
    /** Hides items that are unavailable. */
    hideUnavailableItems?: boolean;
    /**
     * Maximum items to be fetched.
     * @default 10
     */
    maxItems?: number;
    /**
     * Control SKUs returned for each product in the query. The less SKUs needed to be returned, the more performant your shelf query will be.
     * @default "ALL_AVAILABLE"
     */
    skusFilter?: 'ALL_AVAILABLE' | 'ALL' | 'FIRST_AVAILABLE';
    /**
     * Control what price to be shown when price has different installments options.
     * @default "MAX_WITHOUT_INTEREST"
     */
    installmentCriteria?: 'MAX_WITHOUT_INTEREST' | 'MAX_WITH_INTEREST';
    /**
     * Name of the list property on Google Analytics events.
     */
    listName?: string;
    /**
     * Logic to enable which SKU will be the selected item
     * */
    preferredSKU?: PreferenceType;
    /** Slot of a product summary. */
    ProductSummary: ComponentType<{
        product: any;
        actionOnClick: any;
    }>;
    /** Callback on product click. */
    actionOnProductClick?: (product: any) => void;
}
declare function ProductSummaryList(props: PropsWithChildren<Props>): JSX.Element | null;
declare namespace ProductSummaryList {
    var schema: {
        title: string;
        description: string;
        type: string;
        properties: {
            category: {
                title: string;
                description: string;
                type: string;
                isLayout: boolean;
            };
            specificationFilters: {
                title: string;
                type: string;
                items: {
                    title: string;
                    type: string;
                    properties: {
                        id: {
                            type: string;
                            title: string;
                        };
                        value: {
                            type: string;
                            title: string;
                        };
                    };
                };
            };
            collection: {
                title: string;
                type: string;
                isLayout: boolean;
            };
            orderBy: {
                title: string;
                type: string;
                enum: string[];
                enumNames: string[];
                default: string;
                isLayout: boolean;
            };
            hideUnavailableItems: {
                title: string;
                type: string;
                default: boolean;
                isLayout: boolean;
            };
            maxItems: {
                title: string;
                type: string;
                isLayout: boolean;
                default: number;
            };
            skusFilter: {
                title: string;
                description: string;
                type: string;
                default: string;
                enum: string[];
                enumNames: string[];
            };
            installmentCriteria: {
                title: string;
                description: string;
                type: string;
                default: string;
                enum: string[];
                enumNames: string[];
            };
            listName: {
                title: string;
                type: string;
            };
        };
    };
}
export default ProductSummaryList;
