/// <reference types="react" />
import type { CssHandlesTypes } from 'vtex.css-handles';
import type { ResponsiveValuesTypes } from 'vtex.responsive-values';
import type { ProductTypes } from 'vtex.product-context';
declare const CSS_HANDLES: readonly ["SKUSelectorContainer", "frameAround", "seeMoreButton", "skuSelectorContainer", "skuSelectorInternalBox", "skuSelectorItemImageValue", "skuSelectorItemImage", "skuSelectorItemTextValue", "skuSelectorItem", "skuSelectorNameContainer", "skuSelectorNameSeparator", "skuSelectorName", "skuSelectorOptionsList", "skuSelectorSelectorImageValue", "skuSelectorSubcontainer", "skuSelectorTextContainer", "valueWrapper"];
interface Props {
    skuItems: ProductTypes.Item[];
    skuSelected: ProductTypes.Item | null;
    onSKUSelected?: (skuId: string) => void;
    maxItems?: number;
    visibility?: string;
    seeMoreLabel: string;
    hideImpossibleCombinations?: boolean;
    showValueNameForImageVariation?: boolean;
    showValueForVariation?: 'none' | 'image' | 'all';
    imageHeight?: ResponsiveValuesTypes.ResponsiveValue<number>;
    imageWidth?: ResponsiveValuesTypes.ResponsiveValue<number>;
    thumbnailImage?: string;
    visibleVariations?: string[];
    showVariationsLabels?: boolean;
    variationsSpacing?: number;
    showVariationsErrorMessage?: boolean;
    initialSelection?: 'complete' | 'image' | 'empty';
    displayMode?: ResponsiveValuesTypes.ResponsiveValue<'select' | 'default' | 'slider'>;
    sliderDisplayThreshold?: number;
    sliderArrowSize?: number;
    sliderItemsPerPage?: ResponsiveValuesTypes.ResponsiveValue<number>;
    classes?: CssHandlesTypes.CustomClasses<typeof CSS_HANDLES>;
}
declare function ProductSummarySKUSelector(props: Props): JSX.Element;
export default ProductSummarySKUSelector;
