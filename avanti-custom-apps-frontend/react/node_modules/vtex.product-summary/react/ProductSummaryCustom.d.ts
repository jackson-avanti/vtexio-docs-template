import type { PropsWithChildren } from 'react';
import type { ProductSummaryTypes } from 'vtex.product-summary-context';
import type { CssHandlesTypes } from 'vtex.css-handles';
import { SponsoredBadgePosition } from 'vtex.product-summary-context/react/ProductSummaryTypes';
declare const CSS_HANDLES: readonly ["container", "containerNormal", "element", "clearLink"];
interface Props {
    product: ProductSummaryTypes.Product;
    /** Function that is executed when a product is clicked */
    actionOnClick?: () => void;
    href?: string;
    /**
     * Whether the client will request the simulation API for all sellers ("async"), only for the 1P seller ("asyncOnly1P") or if will not request the API ("default")
     * @default "default"
     */
    priceBehavior?: 'async' | 'asyncOnly1P' | 'default';
    /**
     * Name of the list the Product Summary is in. Should be set by a Shelf or the Search Result gallery.
     */
    listName?: string;
    /**
     * Whether the listName should be sent to product pages via querystring
     * @default true
     */
    trackListName?: boolean;
    /**
     * The position of the Product Summary in a list of Product Summaries. Used by the
     * ProductImpressions event.
     */
    position?: number;
    classes?: CssHandlesTypes.CustomClasses<typeof CSS_HANDLES>;
    /**
     * The predefined position of the sponsored badge, if applicable.
     */
    sponsoredBadgePosition?: SponsoredBadgePosition;
    /**
     * The label of the sponsored badge, if applicable.
     */
    sponsoredBadgeLabel?: string;
}
declare function ProductSummaryWrapper({ product, actionOnClick, href, priceBehavior, trackListName, listName, position, sponsoredBadgePosition, sponsoredBadgeLabel, classes, children, }: PropsWithChildren<Props>): JSX.Element;
declare namespace ProductSummaryWrapper {
    var schema: {
        title: string;
        description: string;
    };
    var mapCatalogProductToProductSummary: typeof import("./utils/normalize").mapCatalogProductToProductSummary;
}
export default ProductSummaryWrapper;
