/// <reference types="react" />
import './slick.global.css';
import './slick-theme.global.css';
interface IProps {
    banners: Banner[];
}
declare type Banner = {
    image: string;
    linkImage?: string;
    imageAlt?: string;
    imageMob: string;
    isLcp?: boolean;
    hasStartDate?: boolean;
    startDate?: string;
    hasEndDate?: boolean;
    endDate?: string;
    analyticsProperties?: 'none' | 'provide';
    promotionId?: string;
    promotionName?: string;
    promotionPosition?: string;
    promotionProductId?: string;
    promotionProductName?: string;
    __isDuplicated?: boolean;
};
declare const BannerHome: {
    ({ banners }: IProps): JSX.Element;
    schema: {
        title: string;
        description: string;
        type: string;
        properties: {
            banners: {
                title: string;
                type: string;
                items: {
                    title: string;
                    properties: {
                        image: {
                            title: string;
                            type: string;
                            widget: {
                                'ui:widget': string;
                            };
                        };
                        imageMob: {
                            title: string;
                            type: string;
                            widget: {
                                'ui:widget': string;
                            };
                        };
                        linkImage: {
                            title: string;
                            type: string;
                        };
                        imageAlt: {
                            title: string;
                            type: string;
                        };
                        isLcp: {
                            title: string;
                            type: string;
                            default: boolean;
                        };
                        hasStartDate: {
                            title: string;
                            type: string;
                            enum: boolean[];
                            enumNames: string[];
                            default: boolean;
                            widget: {
                                'ui:widget': string;
                            };
                        };
                        startDate: {};
                        hasEndDate: {
                            title: string;
                            type: string;
                            enum: boolean[];
                            enumNames: string[];
                            default: boolean;
                            widget: {
                                'ui:widget': string;
                            };
                        };
                        endDate: {};
                        analyticsProperties: {
                            title: string;
                            description: string;
                            enum: string[];
                            enumNames: string[];
                            widget: {
                                "ui:widget": string;
                            };
                            default: string;
                        };
                    };
                    required: string[];
                    dependencies: {
                        hasStartDate: {
                            oneOf: {
                                properties: {
                                    hasStartDate: {
                                        enum: boolean[];
                                    };
                                    startDate: {
                                        title: string;
                                        description: string;
                                        default: string;
                                        type: string;
                                        format: string;
                                        widget: {
                                            "ui:widget": string;
                                        };
                                    };
                                };
                            }[];
                        };
                        hasEndDate: {
                            oneOf: {
                                properties: {
                                    hasEndDate: {
                                        enum: boolean[];
                                    };
                                    endDate: {
                                        title: string;
                                        description: string;
                                        default: null;
                                        type: string;
                                        format: string;
                                        widget: {
                                            "ui:widget": string;
                                        };
                                    };
                                };
                            }[];
                        };
                        analyticsProperties: {
                            oneOf: ({
                                properties: {
                                    analyticsProperties: {
                                        enum: string[];
                                    };
                                    promotionId: {
                                        title: string;
                                        type: string;
                                        default: string;
                                    };
                                    promotionName: {
                                        title: string;
                                        type: string;
                                        default: string;
                                    };
                                    promotionPosition: {
                                        title: string;
                                        type: string;
                                        default: string;
                                    };
                                    promotionProductId: {
                                        title: string;
                                        type: string;
                                        default: string;
                                    };
                                    promotionProductName: {
                                        title: string;
                                        type: string;
                                        default: string;
                                    };
                                };
                            } | {
                                properties: {
                                    analyticsProperties: {
                                        enum: string[];
                                    };
                                    promotionId?: undefined;
                                    promotionName?: undefined;
                                    promotionPosition?: undefined;
                                    promotionProductId?: undefined;
                                    promotionProductName?: undefined;
                                };
                            })[];
                        };
                    };
                };
            };
        };
    };
};
export default BannerHome;
