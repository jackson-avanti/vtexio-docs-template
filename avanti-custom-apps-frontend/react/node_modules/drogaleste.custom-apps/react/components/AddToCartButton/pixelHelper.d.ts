import type { EventName } from 'vtex.pixel-manager/react/PixelEventTypes';
export declare function mapCartItemToPixel(item: CartItem): PixelCartItem;
export declare function mapBuyButtonItemToPixel(item: BuyButtonItem): PixelCartItem;
interface BuyButtonItem {
    id: string;
    skuName: string;
    sellingPrice: number;
    name: string;
    quantity: number;
    productId: string;
    productRefId: string;
    brand: string;
    category: string;
    detailUrl: string;
    imageUrl: string;
    refId: string;
}
export interface PixelCartItem {
    skuId: string;
    variant: string;
    price: number;
    priceIsInt: boolean;
    name: string;
    quantity: number;
    productId: string;
    productRefId: string;
    brand: string;
    category: string;
    detailUrl: string;
    imageUrl: string;
    referenceId: string;
}
interface BuyButtonItem {
    id: string;
    skuName: string;
    sellingPrice: number;
    name: string;
    quantity: number;
    productId: string;
    productRefId: string;
    brand: string;
    category: string;
    detailUrl: string;
    imageUrl: string;
    refId: string;
}
export interface CartItem {
    id: string;
    skuName: string;
    sellingPrice: number;
    name: string;
    quantity: number;
    productId: string;
    productRefId: string;
    additionalInfo: {
        brandName: string;
    };
    productCategoryIds: string;
    productCategories: Record<string, string>;
    detailUrl: string;
    imageUrl?: string;
    imageUrls?: {
        at1x: string;
        at2x: string;
        at3x: string;
    };
    refId: string;
}
export interface CartItemDataLayer {
    brand: string;
    category: string;
    id: string;
    name: string;
    price: number;
    quantity: number;
    variant: string;
}
declare global {
    interface Window {
        dataLayer: any;
    }
}
declare global {
    interface Window {
        dataLayer: any;
    }
}
export declare function removesUnpexpectedClickGtm(): void;
export declare const updateDatalayer: (action: EventName, productContextValue: any, quantityDispatch: number) => void;
export {};
