export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  Markdown: any;
  AttachmentSchema: any;
  AttachmentContent: any;
  InputValues: any;
  /**
   * ProductCategoriesObject is a Record<string, string>, in the following format:
   * { '<categoryNumber>': '<categoryName>' }
   */
  ProductCategoriesObject: any;
  MatchedParameters: any;
  CustomFieldsObject: any;
  OfferingInfo: any;
  IOSanitizedString: any;
  IOUpload: any;
  Upload: any;
};

















export type AddressInput = {
  addressId?: Maybe<Scalars['ID']>;
  addressType?: Maybe<AddressType>;
  addressQuery?: Maybe<Scalars['String']>;
  city: Scalars['String'];
  complement: Scalars['String'];
  country: Scalars['String'];
  geoCoordinates?: Maybe<Array<Maybe<Scalars['Float']>>>;
  neighborhood: Scalars['String'];
  number: Scalars['String'];
  postalCode: Scalars['String'];
  receiverName?: Maybe<Scalars['String']>;
  reference?: Maybe<Scalars['String']>;
  state: Scalars['String'];
  street: Scalars['String'];
  isDisposable?: Maybe<Scalars['Boolean']>;
};

export type AddressType = 
  | 'residential'
  | 'commercial'
  | 'inStore'
  | 'giftRegistry'
  | 'pickup'
  | 'search';




export type AppsFilter = {
  search?: Maybe<Scalars['String']>;
  suggested?: Maybe<Scalars['Boolean']>;
  collection?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  installed?: Maybe<Scalars['Boolean']>;
  salesChannel?: Maybe<Scalars['Int']>;
};




export type AssemblyOptionInput = {
  assemblyId: Scalars['String'];
  id?: Maybe<Scalars['ID']>;
  quantity?: Maybe<Scalars['Int']>;
  seller?: Maybe<Scalars['String']>;
  inputValues?: Maybe<Scalars['InputValues']>;
  options?: Maybe<Array<AssemblyOptionInput>>;
};














export type BundleItemAttachmentInput = {
  itemIndex: Scalars['Int'];
  bundleItemId: Scalars['String'];
  attachmentName: Scalars['String'];
  attachmentContent: Scalars['AttachmentContent'];
};







export type ClientPreferencesDataInput = {
  optInNewsletter?: Maybe<Scalars['Boolean']>;
  locale?: Maybe<Scalars['String']>;
};

















export type Interval = {
  from?: Maybe<Scalars['Int']>;
  to?: Maybe<Scalars['Int']>;
};

export type IoCacheControlScope = 
  | 'SEGMENT'
  | 'PUBLIC'
  | 'PRIVATE';





export type ItemInput = {
  id?: Maybe<Scalars['Int']>;
  index?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Float']>;
  seller?: Maybe<Scalars['ID']>;
  uniqueId?: Maybe<Scalars['String']>;
  inputValues?: Maybe<Scalars['InputValues']>;
  options?: Maybe<Array<Maybe<AssemblyOptionInput>>>;
};

export type ItemsOrdinationCriteria = 
  | 'name'
  | 'add_time';




export type ManualPriceInput = {
  itemIndex: Scalars['Int'];
  price: Scalars['Float'];
};



export type MarketingDataInput = {
  utmCampaign?: Maybe<Scalars['String']>;
  utmMedium?: Maybe<Scalars['String']>;
  utmSource?: Maybe<Scalars['String']>;
  utmiCampaign?: Maybe<Scalars['String']>;
  utmiPart?: Maybe<Scalars['String']>;
  utmiPage?: Maybe<Scalars['String']>;
  coupon?: Maybe<Scalars['String']>;
  marketingTags?: Maybe<Array<Scalars['String']>>;
};








export type OfferingInput = {
  itemIndex: Scalars['Int'];
  offeringId: Scalars['String'];
  offeringInfo?: Maybe<Scalars['OfferingInfo']>;
};




export type OrderFormOpenTextInput = {
  value?: Maybe<Scalars['String']>;
};




export type PaymentDataInput = {
  payments: Array<PaymentInput>;
  paymentSystem: Scalars['String'];
  cardHolder: Scalars['String'];
  cardNumber: Scalars['String'];
  expiryDate: Scalars['String'];
  csc: Scalars['String'];
  document: Scalars['String'];
  documentType: Scalars['String'];
  partnerId: Scalars['String'];
  address: AddressInput;
};

export type PaymentInput = {
  hasDefaultBillingAddress?: Maybe<Scalars['Boolean']>;
  installmentsInterestRate?: Maybe<Scalars['Int']>;
  paymentSystem?: Maybe<Scalars['String']>;
  bin?: Maybe<Scalars['String']>;
  accountId?: Maybe<Scalars['String']>;
  tokenId?: Maybe<Scalars['String']>;
  installments?: Maybe<Scalars['Int']>;
  referenceValue?: Maybe<Scalars['Int']>;
  value?: Maybe<Scalars['Int']>;
};


export type PaymentToken = {
  creditCardToken: Scalars['String'];
  paymentSystem: Scalars['String'];
};


















export type ShippingItem = {
  id?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['String']>;
  seller?: Maybe<Scalars['String']>;
};


export type Status = 
  | 'COMINGSOON'
  | 'PUBLISHED';









export type UserProfileInput = {
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  lastName?: Maybe<Scalars['String']>;
  document?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  documentType?: Maybe<Scalars['String']>;
  isCorporate?: Maybe<Scalars['Boolean']>;
  corporateName?: Maybe<Scalars['String']>;
  tradeName?: Maybe<Scalars['String']>;
  corporateDocument?: Maybe<Scalars['String']>;
  stateInscription?: Maybe<Scalars['String']>;
};

export type UserType = 
  | 'CALL_CENTER_OPERATOR'
  | 'STORE_USER';



export type AddressFragment = { __typename?: 'Address', addressId?: Maybe<string>, addressType?: Maybe<AddressType>, city?: Maybe<string>, complement?: Maybe<string>, country?: Maybe<string>, neighborhood?: Maybe<string>, number?: Maybe<string>, postalCode?: Maybe<string>, receiverName?: Maybe<string>, reference?: Maybe<string>, state?: Maybe<string>, street?: Maybe<string>, isDisposable?: Maybe<boolean>, geoCoordinates?: Maybe<Array<Maybe<number>>> };

export type BundleItemFragment = { __typename?: 'Item', availability?: Maybe<string>, detailUrl?: Maybe<string>, id: string, listPrice?: Maybe<number>, measurementUnit?: Maybe<string>, name?: Maybe<string>, price?: Maybe<number>, productCategories?: Maybe<any>, productCategoryIds?: Maybe<string>, productRefId?: Maybe<string>, productId?: Maybe<string>, quantity: number, seller?: Maybe<string>, sellingPrice?: Maybe<number>, skuName?: Maybe<string>, unitMultiplier?: Maybe<number>, uniqueId: string, refId?: Maybe<string>, additionalInfo?: Maybe<{ __typename?: 'ItemAdditionalInfo', brandName?: Maybe<string> }>, attachments: Array<{ __typename?: 'Attachment', name?: Maybe<string>, content?: Maybe<any> }>, attachmentOfferings: Array<{ __typename?: 'AttachmentOffering', name?: Maybe<string>, required?: Maybe<boolean>, schema?: Maybe<any> }>, imageUrls?: Maybe<{ __typename?: 'ImageUrls', at1x: string, at2x: string, at3x: string }>, offerings: Array<{ __typename?: 'Offering', id: string, name: string, price: number, type: string, attachmentOfferings: Array<{ __typename?: 'AttachmentOffering', name?: Maybe<string>, required?: Maybe<boolean>, schema?: Maybe<any> }> }>, skuSpecifications: Array<{ __typename?: 'SKUSpecification', fieldName?: Maybe<string>, fieldValues: Array<Maybe<string>> }> };

export type ItemFragment = { __typename?: 'Item', parentAssemblyBinding?: Maybe<string>, parentItemIndex?: Maybe<number>, sellingPriceWithAssemblies?: Maybe<number>, availability?: Maybe<string>, detailUrl?: Maybe<string>, id: string, listPrice?: Maybe<number>, manualPrice?: Maybe<number>, measurementUnit?: Maybe<string>, modalType?: Maybe<string>, name?: Maybe<string>, price?: Maybe<number>, productCategories?: Maybe<any>, productCategoryIds?: Maybe<string>, productRefId?: Maybe<string>, productId?: Maybe<string>, quantity: number, seller?: Maybe<string>, sellingPrice?: Maybe<number>, skuName?: Maybe<string>, unitMultiplier?: Maybe<number>, uniqueId: string, refId?: Maybe<string>, isGift: boolean, additionalInfo?: Maybe<{ __typename?: 'ItemAdditionalInfo', brandName?: Maybe<string> }>, attachments: Array<{ __typename?: 'Attachment', name?: Maybe<string>, content?: Maybe<any> }>, attachmentOfferings: Array<{ __typename?: 'AttachmentOffering', name?: Maybe<string>, required?: Maybe<boolean>, schema?: Maybe<any> }>, bundleItems: Array<(
    { __typename?: 'Item' }
    & BundleItemFragment
  )>, options?: Maybe<Array<Maybe<{ __typename?: 'AssemblyOptionType', assemblyId: string, id?: Maybe<string>, quantity?: Maybe<number>, seller?: Maybe<string>, inputValues?: Maybe<any>, options?: Maybe<Array<{ __typename?: 'AssemblyOptionType', assemblyId: string, id?: Maybe<string>, quantity?: Maybe<number>, seller?: Maybe<string>, inputValues?: Maybe<any>, options?: Maybe<Array<{ __typename?: 'AssemblyOptionType', assemblyId: string, id?: Maybe<string>, quantity?: Maybe<number>, seller?: Maybe<string>, inputValues?: Maybe<any> }>> }>> }>>>, imageUrls?: Maybe<{ __typename?: 'ImageUrls', at1x: string, at2x: string, at3x: string }>, offerings: Array<{ __typename?: 'Offering', id: string, name: string, price: number, type: string, attachmentOfferings: Array<{ __typename?: 'AttachmentOffering', name?: Maybe<string>, required?: Maybe<boolean>, schema?: Maybe<any> }> }>, priceTags: Array<{ __typename?: 'PriceTag', identifier?: Maybe<string>, isPercentual?: Maybe<boolean>, name?: Maybe<string>, rawValue?: Maybe<number>, value?: Maybe<number>, ratesAndBenefitsIdentifier?: Maybe<{ __typename?: 'RatesAndBenefitsIdentifier', description?: Maybe<string>, id?: Maybe<string>, featured?: Maybe<boolean>, name?: Maybe<string>, matchedParameters?: Maybe<any> }> }>, skuSpecifications: Array<{ __typename?: 'SKUSpecification', fieldName?: Maybe<string>, fieldValues: Array<Maybe<string>> }>, priceDefinition?: Maybe<{ __typename?: 'PriceDefinition', calculatedSellingPrice: number, total: number, sellingPrices: Array<{ __typename?: 'SellingPrice', quantity: number, value: number }> }> };

export type OrderFormFragment = { __typename?: 'OrderForm', id: string, canEditData: boolean, loggedIn: boolean, userProfileId?: Maybe<string>, userType?: Maybe<UserType>, value: number, allowManualPrice?: Maybe<boolean>, items: Array<(
    { __typename?: 'Item' }
    & ItemFragment
  )>, marketingData: { __typename?: 'MarketingData', coupon?: Maybe<string>, utmCampaign?: Maybe<string>, utmMedium?: Maybe<string>, utmSource?: Maybe<string>, utmiCampaign?: Maybe<string>, utmiPart?: Maybe<string>, utmiPage?: Maybe<string> }, totalizers: Array<{ __typename?: 'Totalizer', id: string, name?: Maybe<string>, value: number }>, shipping: { __typename?: 'Shipping', countries?: Maybe<Array<Maybe<string>>>, isValid: boolean, availableAddresses?: Maybe<Array<Maybe<(
      { __typename?: 'Address' }
      & AddressFragment
    )>>>, selectedAddress?: Maybe<(
      { __typename?: 'Address' }
      & AddressFragment
    )>, deliveryOptions: Array<{ __typename?: 'DeliveryOption', id: string, deliveryChannel: string, price: number, estimate: string, isSelected: boolean }>, pickupOptions: Array<{ __typename?: 'PickupOption', id: string, deliveryChannel: string, price: number, estimate: string, isSelected: boolean, friendlyName: string, additionalInfo?: Maybe<string>, storeDistance?: Maybe<number>, transitTime?: Maybe<string>, address: (
        { __typename?: 'Address' }
        & AddressFragment
      ), businessHours: Array<{ __typename?: 'BusinessHour', dayNumber: string, closed: boolean, closingTime: string, openingTime: string }> }> }, paymentData: { __typename?: 'PaymentData', isValid: boolean, paymentSystems: Array<{ __typename?: 'PaymentSystem', id: string, name: string, groupName: string, stringId: string, requiresDocument: boolean, isCustom: boolean, description?: Maybe<string>, requiresAuthentication?: Maybe<boolean>, dueDate?: Maybe<string>, validator?: Maybe<{ __typename?: 'Validator', regex?: Maybe<string>, mask?: Maybe<string>, cardCodeRegex?: Maybe<string>, cardCodeMask?: Maybe<string>, weights?: Maybe<Array<Maybe<number>>>, useCvv?: Maybe<boolean>, useExpirationDate?: Maybe<boolean>, useCardHolderName?: Maybe<boolean>, useBillingAddress?: Maybe<boolean> }> }>, payments: Array<{ __typename?: 'Payment', paymentSystem?: Maybe<string>, bin?: Maybe<string>, accountId?: Maybe<string>, tokenId?: Maybe<string>, installments?: Maybe<number>, referenceValue?: Maybe<number>, value?: Maybe<number> }>, installmentOptions: Array<{ __typename?: 'InstallmentOption', paymentSystem: string, installments: Array<{ __typename?: 'Installment', count: number, hasInterestRate?: Maybe<boolean>, interestRate?: Maybe<number>, value?: Maybe<number>, total: number }> }>, availableAccounts: Array<{ __typename?: 'AvailableAccount', accountId: string, paymentSystem: string, paymentSystemName: string, cardNumber: string, bin: string }> }, clientProfileData?: Maybe<{ __typename?: 'ClientData', email?: Maybe<string>, firstName?: Maybe<string>, lastName?: Maybe<string>, document?: Maybe<string>, documentType?: Maybe<string>, phone?: Maybe<string>, isValid: boolean }>, clientPreferencesData?: Maybe<{ __typename?: 'ClientPreferencesData', locale?: Maybe<string>, optInNewsletter?: Maybe<boolean> }>, messages: { __typename?: 'OrderFormMessages', couponMessages: Array<{ __typename?: 'Message', code?: Maybe<string> }>, generalMessages: Array<{ __typename?: 'Message', code?: Maybe<string>, text?: Maybe<string>, status?: Maybe<string> }> }, customData?: Maybe<{ __typename?: 'CustomData', customApps: Array<{ __typename?: 'CustomApp', fields: any, id: string, major: number }> }> };

export type AddToCartMutationVariables = Exact<{
  items?: Maybe<Array<Maybe<ItemInput>> | Maybe<ItemInput>>;
  marketingData?: Maybe<MarketingDataInput>;
  salesChannel?: Maybe<Scalars['String']>;
  allowedOutdatedData?: Maybe<Array<Scalars['String']> | Scalars['String']>;
}>;


export type AddToCartMutation = { __typename?: 'Mutation', addToCart: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type ClearOrderFormMessagesMutationVariables = Exact<{
  orderFormId: Scalars['ID'];
}>;


export type ClearOrderFormMessagesMutation = { __typename?: 'Mutation', clearOrderFormMessages: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type EstimateShippingMutationVariables = Exact<{
  addressInput?: Maybe<AddressInput>;
}>;


export type EstimateShippingMutation = { __typename?: 'Mutation', estimateShipping: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type InsertCouponMutationVariables = Exact<{
  text?: Maybe<Scalars['String']>;
}>;


export type InsertCouponMutation = { __typename?: 'Mutation', insertCoupon: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type SaveCardsMutationVariables = Exact<{
  paymentData: Array<PaymentDataInput> | PaymentDataInput;
  cardSessionId: Scalars['String'];
}>;


export type SaveCardsMutation = { __typename?: 'Mutation', saveCards: { __typename?: 'SaveCardsPayload', tokenizedCards: Array<Maybe<{ __typename?: 'TokenizedCard', token: string, bin: string, lastDigits: string, paymentSystem: number }>> } };

export type SavePaymentTokenMutationVariables = Exact<{
  paymentTokens?: Maybe<Array<Maybe<PaymentToken>> | Maybe<PaymentToken>>;
}>;


export type SavePaymentTokenMutation = { __typename?: 'Mutation', savePaymentToken?: Maybe<{ __typename?: 'SavePaymentTokenPayload', status?: Maybe<string> }> };

export type SelectDeliveryOptionMutationVariables = Exact<{
  deliveryOptionId?: Maybe<Scalars['String']>;
}>;


export type SelectDeliveryOptionMutation = { __typename?: 'Mutation', selectDeliveryOption: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type SelectPickupOptionMutationVariables = Exact<{
  pickupOptionId?: Maybe<Scalars['String']>;
}>;


export type SelectPickupOptionMutation = { __typename?: 'Mutation', selectPickupOption: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type SetManualPriceMutationVariables = Exact<{
  manualPriceInput: ManualPriceInput;
}>;


export type SetManualPriceMutation = { __typename?: 'Mutation', setManualPrice: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type UpdateClientPreferencesDataMutationVariables = Exact<{
  clientPreferences: ClientPreferencesDataInput;
}>;


export type UpdateClientPreferencesDataMutation = { __typename?: 'Mutation', updateClientPreferencesData: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type UpdateItemsMutationVariables = Exact<{
  orderItems?: Maybe<Array<Maybe<ItemInput>> | Maybe<ItemInput>>;
  allowedOutdatedData?: Maybe<Array<Scalars['String']> | Scalars['String']>;
}>;


export type UpdateItemsMutation = { __typename?: 'Mutation', updateItems: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type UpdateOrderFormPaymentMutationVariables = Exact<{
  paymentData: PaymentDataInput;
}>;


export type UpdateOrderFormPaymentMutation = { __typename?: 'Mutation', updateOrderFormPayment: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type UpdateOrderFormProfileMutationVariables = Exact<{
  profile: UserProfileInput;
}>;


export type UpdateOrderFormProfileMutation = { __typename?: 'Mutation', updateOrderFormProfile: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type UpdateSelectedAddressMutationVariables = Exact<{
  address: AddressInput;
}>;


export type UpdateSelectedAddressMutation = { __typename?: 'Mutation', updateSelectedAddress: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type CardSessionIdQueryVariables = Exact<{ [key: string]: never; }>;


export type CardSessionIdQuery = { __typename?: 'Query', getCardSessionId?: Maybe<string> };

export type GeolocationInstalledQueryVariables = Exact<{ [key: string]: never; }>;


export type GeolocationInstalledQuery = { __typename?: 'Query', installedApp?: Maybe<{ __typename?: 'InstalledApp', source?: Maybe<string> }> };

export type OrderFormQueryVariables = Exact<{
  orderFormId?: Maybe<Scalars['ID']>;
  refreshOutdatedData?: Maybe<Scalars['Boolean']>;
}>;


export type OrderFormQuery = { __typename?: 'Query', orderForm: (
    { __typename?: 'OrderForm' }
    & OrderFormFragment
  ) };

export type ProfileQueryVariables = Exact<{
  email: Scalars['String'];
}>;


export type ProfileQuery = { __typename?: 'Query', checkoutProfile?: Maybe<{ __typename?: 'CheckoutProfile', userProfileId?: Maybe<string>, profileProvider?: Maybe<string>, availableAccounts: Array<{ __typename?: 'AvailableAccount', accountId: string, paymentSystem: string, paymentSystemName: string, cardNumber: string, bin: string }>, userProfile?: Maybe<{ __typename?: 'UserProfile', email: string, firstName: string, lastName: string, document?: Maybe<string>, documentType?: Maybe<string>, phone?: Maybe<string>, corporateName?: Maybe<string>, tradeName?: Maybe<string>, corporateDocument?: Maybe<string>, stateInscription?: Maybe<string>, corporatePhone?: Maybe<string>, isCorporate: boolean, profileCompleteOnLoading?: Maybe<string>, profileErrorOnLoading?: Maybe<string>, customerClass?: Maybe<string> }>, availableAddresses: Array<{ __typename?: 'Address', addressId?: Maybe<string>, addressType?: Maybe<AddressType>, city?: Maybe<string>, complement?: Maybe<string>, country?: Maybe<string>, geoCoordinates?: Maybe<Array<Maybe<number>>>, neighborhood?: Maybe<string>, number?: Maybe<string> }> }> };

export type InstalledAppQueryVariables = Exact<{
  slug: Scalars['String'];
}>;


export type InstalledAppQuery = { __typename?: 'Query', installedApp?: Maybe<{ __typename?: 'InstalledApp', version?: Maybe<string> }> };

export {}