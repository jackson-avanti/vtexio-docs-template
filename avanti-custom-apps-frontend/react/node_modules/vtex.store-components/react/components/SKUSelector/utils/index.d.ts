import { SelectedVariations, SelectorProductItem } from '../types';
/**
 * Return the maximum sku price
 * @param {array of sku's} items
 */
export declare const getMaxSkuPrice: (items: SelectorProductItem[]) => number;
/**
 * Remove the 'https' from the given url
 * @param {string} url
 */
export declare const stripUrl: (url: string) => string;
/**
 * Parse the variations field in the sku object
 * @param {sku} sku
 */
export declare const parseSku: (sku: ProductItem) => SelectorProductItem;
/**
 * Verifies if the variation is color
 * @param {string} variation
 */
export declare const isColor: (variation: string) => boolean;
/**
 * Choose wich variation will be the main one.
 * @param {Array[string]} variations
 */
export declare const getMainVariationName: (variations: string[]) => string;
/**
 * Given a selectedVariations, find the first item that has those variations selected
 * selectedVariations format: { "color": "black", size: "small", fabric: null }
 * items: skuItems parsed with variations fields
 * Output: item or null, if not present
 */
export declare const findItemWithSelectedVariations: (items: SelectorProductItem[], selectedVariations: SelectedVariations) => SelectorProductItem | undefined;
/**
 * Given a selectedVariations, find items that have those variations selected
 * selectedVariations format: { "color": "black", size: "small", fabric: null }
 * items: skuItems parsed with variations fields
 * Output: list of items with those variations
 */
export declare const findListItemsWithSelectedVariations: (items: SelectorProductItem[], selectedVariations: SelectedVariations) => SelectorProductItem[];
export declare const uniqueOptionToSelect: (items: SelectorProductItem[], selectedVariations: SelectedVariations, isMainAndImpossible: boolean) => Record<string, string>;
export declare function slug(str: string): string;
export declare const DEFAULT_WIDTH = "auto";
export declare const DEFAULT_HEIGHT = "auto";
export declare const MAX_WIDTH = 3000;
export declare const MAX_HEIGHT = 4000;
export declare function cleanImageUrl(imageUrl: string): string | null;
export declare function changeImageUrlSize(imageUrl: string, width?: string | number, height?: string | number): string | undefined;
export declare const DEFAULT_BOTTOM_MARGIN = 7;
export declare function getValidMarginBottom(variationsSpacing?: number): number;
export declare const NO_BOTTOM_MARGIN = "none";
