/// <reference types="react" />
import { ResponsiveValuesTypes } from 'vtex.responsive-values';
import type { CssHandlesTypes } from 'vtex.css-handles';
import { InitialSelectionType, DisplayMode } from './types';
import { ShowValueForVariation, ShowVariationsLabels } from './components/SKUSelector';
export declare const SKU_SELECTOR_CSS_HANDLES: readonly ["errorMessage", "frameAround", "valueWrapper", "diagonalCross", "unavailable", "skuSelectorItem", "skuSelectorBadge", "skuSelectorItemImage", "skuSelectorInternalBox", "skuSelectorItemTextValue", "skuSelectorItemImageValue", "skuSelectorContainer"];
interface Props {
    skuItems: ProductItem[];
    skuSelected: ProductItem | null;
    onSKUSelected?: (skuId: string) => void;
    maxItems?: number;
    visibility?: string;
    seeMoreLabel: string;
    hideImpossibleCombinations?: boolean;
    disableUnavailableSelectOptions?: boolean;
    showValueNameForImageVariation?: boolean;
    showValueForVariation?: ShowValueForVariation;
    imageHeight?: ResponsiveValuesTypes.ResponsiveValue<number>;
    imageWidth?: ResponsiveValuesTypes.ResponsiveValue<number>;
    thumbnailImage?: string;
    visibleVariations?: string[];
    showVariationsLabels?: ShowVariationsLabels;
    variationsSpacing?: number;
    showVariationsErrorMessage?: boolean;
    initialSelection?: InitialSelectionType;
    displayMode?: ResponsiveValuesTypes.ResponsiveValue<DisplayMode>;
    sliderDisplayThreshold?: number;
    sliderArrowSize?: number;
    sliderItemsPerPage?: ResponsiveValuesTypes.ResponsiveValue<number>;
    sortVariationsByLabel?: boolean;
    /** Used to override default CSS handles */
    classes?: CssHandlesTypes.CustomClasses<typeof SKU_SELECTOR_CSS_HANDLES>;
}
declare function SKUSelectorWrapper(props: Props): JSX.Element | null;
declare namespace SKUSelectorWrapper {
    var schema: {
        title: string;
        description: string;
    };
}
export default SKUSelectorWrapper;
