import React from 'react';
import { ResponsiveValuesTypes } from 'vtex.responsive-values';
import { SelectorProductItem, CallbackItem, ImageMap, Variations, DisplayMode } from '../types';
export declare type ShowValueForVariation = 'none' | 'image' | 'all';
export declare type ShowVariationsLabels = boolean | 'none' | 'variation' | 'itemValue' | 'variationAndItemValue';
interface Props {
    seeMoreLabel: string;
    maxItems: number;
    variations: Variations;
    skuItems: SelectorProductItem[];
    onSelectItem: (callbackItem: CallbackItem) => void;
    imagesMap: ImageMap;
    selectedVariations: Record<string, string | null>;
    hideImpossibleCombinations: boolean;
    disableUnavailableSelectOptions: boolean;
    showValueForVariation: ShowValueForVariation;
    showBorders?: boolean;
    imageHeight?: number;
    imageWidth?: number;
    showVariationsLabels: ShowVariationsLabels;
    variationsSpacing?: number;
    showVariationsErrorMessage: boolean;
    displayMode: DisplayMode;
    sliderDisplayThreshold: number;
    sliderArrowSize: number;
    sliderItemsPerPage: ResponsiveValuesTypes.ResponsiveValue<number>;
    sortVariationsByLabel?: boolean;
}
export declare const CSS_HANDLES: readonly ["skuSelectorContainer"];
/** Renders the main and the secondary variation, if it exists. */
declare function SKUSelector({ seeMoreLabel, maxItems, variations, skuItems, onSelectItem, imagesMap, imageHeight, imageWidth, showBorders, displayMode, selectedVariations, showVariationsLabels, showValueForVariation, hideImpossibleCombinations, disableUnavailableSelectOptions, showVariationsErrorMessage, variationsSpacing: marginBottomProp, sliderDisplayThreshold, sliderArrowSize, sliderItemsPerPage, sortVariationsByLabel, }: Props): JSX.Element;
declare const _default: React.MemoExoticComponent<typeof SKUSelector>;
export default _default;
