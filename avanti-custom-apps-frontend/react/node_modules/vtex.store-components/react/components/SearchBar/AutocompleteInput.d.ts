/// <reference types="react" />
import type { DownshiftProps } from 'downshift';
/** Midleware component to adapt the styleguide/Input to be used by the Downshift */
export declare const CSS_HANDLES: readonly ["autoCompleteOuterContainer", "compactMode", "externalSearchButtonWrapper", "paddingInput", "searchBarClearIcon", "searchBarIcon", "searchBarSearchIcon", "suffixWrapper"];
interface Props {
    /** Downshift prop to be passed to the input */
    autoComplete?: string;
    /** Input ID */
    id?: string;
    /** Downshift prop to be passed to the input */
    onBlur?: () => void;
    /** Downshift prop to be passed to the input */
    onChange?: DownshiftProps<any>['onChange'];
    /** Downshift prop to be passed to the input */
    onKeyDown?: (event: any) => void;
    /** Downshift prop to be passed to the input */
    value?: string;
    /** Downshift func to open the menu */
    openMenu?: () => void;
    /** Placeholder to be used on the input */
    placeholder?: string;
    compactMode?: boolean;
    /** Clears the input */
    onClearInput: () => void;
    /** Identify if the search icon is on left or right position */
    hasIconLeft?: boolean;
    /** Custom classes for the search icon */
    iconClasses?: string;
    /** Block class for the search icon */
    iconBlockClass?: string;
    /** Identify if the search input should autofocus or not */
    autoFocus?: boolean;
    /** Function to direct the user to the searchPage */
    onGoToSearchPage: () => void;
    /**
     * @deprecated Use `displayMode`
     * Identify if icon should submit on click
     * */
    submitOnIconClick?: boolean;
    displayMode?: 'clear-button' | 'search-and-clear-buttons' | 'search-button';
    /** Error message showed in search input */
    inputErrorMessage?: string;
    /** The type of the search input */
    inputType?: 'text' | 'search';
    openAutocompleteOnFocus?: boolean;
    onInputChange: DownshiftProps<any>['onChange'];
    inputValue: string;
}
declare function AutocompleteInput({ onClearInput, compactMode, value, hasIconLeft, iconBlockClass, iconClasses, autoFocus, onGoToSearchPage, submitOnIconClick, displayMode, openMenu, inputErrorMessage, inputType, openAutocompleteOnFocus, ...restProps }: Props): JSX.Element;
export default AutocompleteInput;
