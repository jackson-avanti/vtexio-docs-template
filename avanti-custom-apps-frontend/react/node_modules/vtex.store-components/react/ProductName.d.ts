/// <reference types="react" />
import type { CssHandlesTypes } from 'vtex.css-handles';
declare const CSS_HANDLES: readonly ["productNameContainer", "sponsoredBadge", "productBrand", "productSku", "productReference", "productNameLoader", "productNameBrandLoader", "productNameSkuLoader", "productNameLink"];
declare type DeprecatedProps = {
    /**
     * Name of the product
     * @deprecated This prop is fulfilled automatically via product-context.
     */
    name?: string;
    /**
     * Selected SKU name
     * @deprecated This prop is fulfilled automatically via product-context.
     */
    skuName?: string;
    /**
     * Product reference
     * @deprecated This prop is fulfilled automatically via product-context.
     */
    productReference?: string;
    /**
     * Brand name
     * @deprecated This prop is fulfilled automatically via product-context.
     */
    brandName?: string;
};
declare type Props = {
    /** Show sku */
    showSku?: boolean;
    /** Show product reference */
    showProductReference?: boolean;
    /** Show brand name */
    showBrandName?: boolean;
    /** Show sponsored badge */
    showSponsoredBadge?: boolean;
    /** Label to display in the sponsored badge */
    sponsoredBadgeLabel?: string;
    /** Classes to be applied to root element */
    className?: string;
    /** Classes to be applied to brandName element */
    brandNameClass?: string;
    /** Classes to be applied to skuName element */
    skuNameClass?: string;
    /** Classes to be applied to productReference element */
    productReferenceClass?: string;
    /** Classes to be applied to loader root element */
    loaderClass?: string;
    /** HTML tag to be used in the component container */
    tag?: 'div' | 'h1' | 'h2' | 'h3';
    /** Used to override default CSS handles */
    classes?: CssHandlesTypes.CustomClasses<typeof CSS_HANDLES>;
    /** Show product link with the product name */
    displayMode?: 'plainText' | 'linkToProductPage';
    /** Product link */
    productLink?: string;
    /** Product id */
    productId?: string;
} & DeprecatedProps;
/**
 * Displays the product name along other information such as **SKU** or **brand**.
 */
declare function ProductNameWrapper(props: Props): JSX.Element;
declare namespace ProductNameWrapper {
    var schema: {
        title: string;
        description: string;
        type: string;
        properties: {
            showBrandName: {
                type: string;
                title: string;
                default: boolean;
                isLayout: boolean;
            };
            showSku: {
                type: string;
                title: string;
                default: boolean;
                isLayout: boolean;
            };
            showProductReference: {
                type: string;
                title: string;
                default: boolean;
                isLayout: boolean;
            };
            displayMode: {
                type: string;
                title: string;
                enum: string[];
                enumNames: string[];
                default: string;
            };
        };
    };
}
export default ProductNameWrapper;
