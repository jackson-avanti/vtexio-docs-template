import type { FC } from 'react';
export interface Product {
    productId: string;
    [key: string]: any;
}
export interface State {
    nextImpressions: Array<{
        product: Product;
        impressionIndex: number;
        originalIndex: number;
    }>;
    sentIds: Map<string, {
        position: number;
    }>;
    listName?: string;
}
interface SendImpressionAction {
    type: 'SEND_IMPRESSION';
    args: {
        product: Product;
        position?: number;
    };
}
interface ResetNextImpressionsAction {
    type: 'RESET_NEXT_IMPRESSIONS';
}
interface SetListNameAction {
    type: 'SET_LIST_NAME';
    args: {
        listName: string;
    };
}
declare type ReducerActions = SendImpressionAction | ResetNextImpressionsAction | SetListNameAction;
export declare type Dispatch = (action: ReducerActions) => void;
interface ProviderProps {
    listName: string;
}
declare const _default: {
    ProductListProvider: FC<ProviderProps>;
    useProductListState: () => State;
    useProductListDispatch: () => Dispatch;
};
export default _default;
