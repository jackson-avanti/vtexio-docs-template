import { PropsWithChildren } from 'react';
import { CssHandlesTypes } from 'vtex.css-handles';
import { SliderLayoutProps, SliderLayoutSiteEditorProps } from './components/SliderContext';
export declare const CSS_HANDLES: readonly ["sliderLayoutContainer", "sliderTrackContainer", "sliderTrack", "slide", "slideChildrenContainer", "sliderLeftArrow", "sliderRightArrow", "sliderArrows", "paginationDotsContainer", "paginationDot"];
interface Props {
    /** Used to override default CSS handles */
    classes?: CssHandlesTypes.CustomClasses<typeof CSS_HANDLES>;
}
declare function SliderLayout({ totalItems, infinite, showNavigationArrows, showPaginationDots, usePagination, fullWidth, arrowSize, children, centerMode, centerModeSlidesGap, itemsPerPage, classes, ...contextProps }: PropsWithChildren<SliderLayoutProps & SliderLayoutSiteEditorProps & Props>): JSX.Element;
declare namespace SliderLayout {
    var schema: {
        title: string;
        type: string;
        properties: {
            autoplay: {
                type: string;
                isLayout: boolean;
                properties: {
                    timeout: {
                        type: string;
                    };
                    stopOnHover: {
                        type: string;
                    };
                };
            };
            itemsPerPage: {
                type: string;
                isLayout: boolean;
                properties: {
                    desktop: {
                        default: number;
                        type: string;
                    };
                    tablet: {
                        default: number;
                        type: string;
                    };
                    phone: {
                        default: number;
                        type: string;
                    };
                };
            };
        };
    };
}
export default SliderLayout;
