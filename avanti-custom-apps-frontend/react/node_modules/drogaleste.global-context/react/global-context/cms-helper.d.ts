export declare class CMSHelper {
    static thisPageIsSiteEditor(): boolean;
    static thisIsDevWorkspace(): boolean;
    static generateImagePage(title?: string): SchemaArraySiteEditor;
    static generateResponsiveOption(): SchemaObjectProperty;
}
export declare type UiWidget = 'image-uploader' | 'textarea' | 'datetime' | 'select' | 'color';
declare type StringType = {
    type: 'string';
    title: string;
    description?: string;
    default?: string;
    enum?: string[];
    disabled?: boolean;
    enumNames?: string[];
    widget?: {
        "ui:widget": UiWidget;
    };
};
declare type NumberType = {
    type: 'number';
    title: string;
    description?: string;
    default?: number;
};
declare type BooleanType = {
    type: 'boolean';
    title: string;
    description?: string;
    default?: boolean;
};
export declare type SchemaObjectProperty = Record<string, SchemaSiteEditor>;
export declare type SchemaObjectSiteEditor = {
    type: 'object';
    __editorItemTitle?: string;
    dependencies?: {
        contentType: {
            oneOf: Array<{
                properties: Record<string, Partial<SchemaSiteEditor>>;
            }>;
        };
    };
    properties?: SchemaObjectProperty;
};
export declare type SchemaArraySiteEditor = {
    type: 'array';
    title: string;
    minItems?: number;
    maxItems?: number;
    items: SchemaObjectSiteEditor;
};
export declare type SchemaSiteEditor = SchemaObjectSiteEditor | SchemaArraySiteEditor | BooleanType | NumberType | StringType;
export {};
