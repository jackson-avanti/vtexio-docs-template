import type { ItemsFilter, InstallmentsCriteria } from 'vtex.search-graphql';
import type { ProductFragment } from './fragments/ProductType';
import ProductType from './fragments/ProductType';
import type { SkuFragment } from './fragments/ItemType';
import ItemType from './fragments/ItemType';
import type { SellerFragment } from './fragments/SellerType';
import SellerType from './fragments/SellerType';
import type { CommertialOfferFragment } from './fragments/CommertialOfferType';
import CommertialOfferType from './fragments/CommertialOfferType';
import type { InstallmentFragment } from './fragments/InstallmentType';
import InstallmentType from './fragments/InstallmentType';
declare type Installment = {
    Installments: InstallmentFragment[];
};
declare type CommertialOffer = CommertialOfferFragment & Installment;
declare type Seller = SellerFragment & CommertialOffer;
declare type Item = SkuFragment & {
    sellers: Seller[];
};
export declare type Data = {
    products: Array<ProductFragment & {
        items: Item[];
    }>;
};
export declare type Variables = {
    category?: string;
    collection?: string;
    specificationFilters?: string[];
    orderBy?: string;
    from?: number;
    to?: number;
    hideUnavailableItems?: boolean;
    skusFilter?: ItemsFilter;
    installmentCriteria?: InstallmentsCriteria;
    shippingOptions?: string[];
};
export { ProductType, ItemType, SellerType, CommertialOfferType, InstallmentType, };
